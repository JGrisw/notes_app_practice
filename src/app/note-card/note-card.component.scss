//importing the scss declarations here so that we can reference specific colors weve created to use throughout app
@import "../../main-styles.scss";

.note-card-container {
  position: relative;
  background: white;
  border-radius: 5px;
  box-shadow: 0px 2px 15px 2px rgba(black, 0.068);
  transition: box-shadow 0.2s ease-out;

  //sass operator that allows nesting the hover styling within the class declaration
  &:hover {
    //when hovering this turns the cursor into the hand symbol
    cursor: pointer;
    //changes box shadow property when hovering but removes blur and offset turning the shadow into an outline
    box-shadow: 0px 0px 0px 4px rgba(black, 0.068);

    .x-button {
      //on hover will show the x button
      opacity: 1;
      transform:scale(1) ;
      //delays the x button opacity
      transition-delay: 0.35s;
    }
  }
  //nesting of scss stylings
  .note-card-content {
    padding: 25px;

    .note-card-title {
      font-size: 22px;
      font-weight: bold;
      color: $purple;
    }

    .note-card-body {
        position: relative;
        color: #555;
        //max height before hidden
        max-height: 80px;
        overflow: hidden;

        .fade-out-truncation{
            position: absolute;
            //allows you to access the truncated text
            pointer-events: none;

            bottom: 0;
            height: 50%;
            width: 100%;
            //linear gradient that fades the body text to white 
            background:linear-gradient(to bottom, rgba(white, 0) 0%, rgba(white, 0.8) 50%, white 100% ) ;
            
        }
    }
  }
}

.x-button {
  position: absolute;

  //12px from top
  top: 12px;
  //12px from the right
  right: 12px;

  height: 35px;
  width: 34px;

  background-color: $light-red;
  background-image: url("../../assets/delete_icon.svg");
  background-repeat: no-repeat;
  background-position: center;

  border-radius: 4px;
  //transitions the button in slighty after the initial hover
  transition: opacity 0.2s ease-out, transform 0.2s ease-out ;

  // x button hidden by default
  opacity: 0;
  transform: scale(0.35);

  &:hover {
    //darkens the x button on hover for an interactive or tactile feel
    background-color: darken($light-red, 2%);
  }
  //clicking the button darkens the button for more interaction
  &:active{
      background-color: darken($light-red, 5%);
  }

}
